#summary Security Policies

== Security Policies ==

== Role Based Security Policy ==
The <tt>Security.Policies.Roles</tt> package implements a role based security policy.

A role is represented by a name in security configuration files.  A role based permission
is associated with a list of roles.  The permission is granted if the user has one of these
roles.

{{{
  <security-role>
    <role-name>admin</role-name>
  </security-role>
  <security-role>
    <role-name>manager</role-name>
  </security-role>
  <role-permission>
    <name>create-workspace</name>
    <role>admin</role>
    <role>manager</role>
  </role-permission>
}}}

This definition declares two roles: <tt>admin</tt> and <tt>manager</tt>
It defines a permission <b>create-workspace</b> that will be granted if the
user has either the <b>admin</b> or the <b>manager</b> role.

=== Policy creation ===
An instance of the <tt>Role_Policy</tt> must be created and registered in the policy manager:

{{{
  Manager : Security.Policies.Policy_Manager;
  Policy  : Security.Policies.Roles.Role_Policy_Access;
  Policy := new Role_Policy;
  Manager.Add_Policy (Policy.all'Access);

}}}

=== Assigning roles to users ===
A <tt>Security_Context</tt> must be associated with a set of roles before checking the
permission.  This is done by using the <tt>Set_Role_Context</tt> operation:

{{{
   Security.Policies.Roles.Set_Role_Context (Security.Contexts.Current, "admin");
}}}

----
[http://code.google.com/p/ada-gen Generated by Dynamo] _from security-policies.ads_
